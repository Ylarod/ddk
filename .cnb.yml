main:
  web_trigger_ddk_dev:
    - name: ddk-dev
      runner:
        cpus: 4
      git:
        enable: true
        submodules: false
      services:
        - docker
      stages:
        - name: docker build
          script: |
            apt update && apt install -y jq --no-install-recommends
            jq -r '.android[] | [.name] | @tsv' "mapping.json" | while IFS=$'\t' read -r name; do
              [ -n "$name" ] || continue
              echo "Building ddk-dev for Android version: $name"
              docker buildx build --push --build-arg ANDROID_VER=$name -t ${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}/ddk-dev:$name . -f .cnb/ddk-dev/Dockerfile
            done

  web_trigger_cnb_dev:
    - name: ddk-cnb-dev
      runner:
        cpus: 4
      git:
        enable: true
        submodules: false
        lfs: false
      services:
        - docker
      stages:
        - name: set docker tag
          script: echo -n "${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}/ddk-cnb-dev:latest"
          exports:
            info: IMAGE_TAG
        - name: docker build
          script: |
            GIT_LFS_SKIP_SMUDGE=1 git submodule update --init --recursive --depth 1
            git lfs pull --include="prebuilts/clang/"
            docker buildx build --push -t $IMAGE_TAG . -f .cnb/cnb-dev/Dockerfile
  
  web_trigger_builder:
    - name: ddk-builder
      runner:
        cpus: 4
      git:
        enable: true
        lfs: false
      services:
        - docker
      stages:
        - name: set docker tag
          script: echo -n "${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}/ddk-builder:latest"
          exports:
            info: IMAGE_TAG
        - name: build image
          script: |
            docker build -t $IMAGE_TAG . -f .cnb/Dockerfile
            docker push $IMAGE_TAG
