name: Build and Release ddk

on:
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.gen.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: false
      - name: Generate matrix from mapping.json
        id: gen
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const raw = fs.readFileSync('mapping.json', 'utf8');
            const data = JSON.parse(raw);
            const matrix = (data.matrix || []).map(m => ({
              source_name: m.android,
              clang_name: m.clang,
            }));
            core.setOutput('matrix', JSON.stringify(matrix));
  
  toolchains:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
    - name: Maximize build space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
    - name: Checkout code
      uses: actions/checkout@v4
      with:
          lfs: false

    - name: Pull lfs
      run: |
        git lfs pull --include="clang/"
        ls -al clang/

    - name: Build image
      run: |
        cd docker
        make toolchains PUSH=1
  
  build:
    needs: ["prepare", "toolchains"]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.prepare.outputs.matrix) }}

    steps:
    - name: Maximize build space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force

    - name: Checkout code
      uses: actions/checkout@v4
      with:
          lfs: false

    - name: Pull lfs
      run: |
        git lfs pull --include="src/src.${{ matrix.source_name }}.tar.zst"
        git lfs pull --include="kdir/kdir.${{ matrix.source_name }}.tar.zst"
        ls -al src/
        ls -al kdir/

    - name: Build image
      run: |
        cd docker
        make build VER=${{ matrix.source_name }} PUSH=1